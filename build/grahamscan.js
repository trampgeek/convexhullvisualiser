/*! ConvexHullDemo 2019-03-08 */
define(["geom"],function(a){function b(b){function e(a){l.push({lines:[m].concat(a),hull:k.slice()})}function f(a){for(;k.length>1&&!k[k.length-1].minus(k[k.length-2]).isLeftTurn(a.minus(k[k.length-1]));)e([{points:[a,k[k.length-1]],style:c}]),k.pop();0!==k.length&&k[-1]===a||k.push(a),e([])}var g,h,i,j,k=[],l=[],m={points:[],style:d};if(b.length<2)return[];for(i=1;i<b.length;i++)g=b[i],(g[1]<b[0][1]||g[1]===b[0][1]&&g[0]>b[0][0])&&(b[i]=b[0],b[0]=g);for(h=new a.Vec(b[0]),j=[],i=1;i<b.length;i++)j.push(new a.Vec(b[i]));for(j.sort(function(a,b){var c=a.minus(h),d=b.minus(h);return c.isParallel(d)?0:c.isLeftTurn(d)?-1:1}),e([]),m={points:[h].concat(j).concat([h]),style:d},k=[h],e([]),i=0;i<j.length;i++)f(j[i]);return f(h),l}const c={color:"blue",width:2,dash:"dot",name:"Candidate"},d={color:"rgb(200, 200, 200)",width:1,dash:"dash",name:"Skeleton"};return b});